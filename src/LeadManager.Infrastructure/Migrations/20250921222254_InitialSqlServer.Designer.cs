// <auto-generated />
using System;
using LeadManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeadManager.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921222254_InitialSqlServer")]
    partial class InitialSqlServer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LeadManager.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Plumbing",
                            ContactEmail = "john.smith@email.com",
                            ContactFirstName = "John",
                            ContactLastName = "Smith",
                            ContactPhone = "+1-555-0123",
                            DateCreated = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Kitchen sink repair needed urgently",
                            Price = 250.00m,
                            Status = 1,
                            Suburb = "Sydney CBD"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Electrical",
                            ContactEmail = "sarah.johnson@email.com",
                            ContactFirstName = "Sarah",
                            ContactLastName = "Johnson",
                            ContactPhone = "+1-555-0456",
                            DateCreated = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Install new light fixtures in living room",
                            Price = 750.00m,
                            Status = 1,
                            Suburb = "Melbourne"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Carpentry",
                            ContactEmail = "mike.brown@email.com",
                            ContactFirstName = "Mike",
                            ContactLastName = "Brown",
                            ContactPhone = "+1-555-0789",
                            DateCreated = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Build custom bookshelf for home office",
                            Price = 1200.00m,
                            Status = 2,
                            Suburb = "Brisbane"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Painting",
                            ContactEmail = "emma.wilson@email.com",
                            ContactFirstName = "Emma",
                            ContactLastName = "Wilson",
                            ContactPhone = "+1-555-0321",
                            DateCreated = new DateTime(2023, 12, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Paint exterior walls of house",
                            Price = 450.00m,
                            Status = 1,
                            Suburb = "Perth"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
